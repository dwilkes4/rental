def dbname = project.property('DB_NAME')
def apppwd = project.property('DB_APP_USER_PWD')
def app = project.property('DB_APP_USER')
def dbadmin = project.property('DB_ADMIN')
def adminpwd = project.property('DB_ADMIN_PWD')

apply plugin: 'java'
apply plugin: 'eclipse'

buildscript {
	ext {
		springBootVersion = '1.5.7.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

group = 'com.wilkestech'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
	runtime('org.postgresql:postgresql')
}

task baseline(type :Exec){
	executable "sh"
	args "-c", "./db/baseline/create-db.sh $dbadmin $adminpwd $dbname $app $apppwd"
}

task dropDB(type :Exec){
	executable "sh"
	args "-c", "./db/baseline/drop-db.sh $dbadmin $adminpwd $dbname $app"
}

baseline.dependsOn dropDB
